Collection variables can store multiple values in a single variable
✅ Collections (like lists, tuples, sets, and dictionaries) hold multiple values, unlike normal variables.

for / in
✅ for item in list: is the correct loop syntax for iterating through a list in Python.

print(friends[2])
✅ Lists are zero-indexed, so 'Sally' is at index 2.

Nothing would print - the program fails with a traceback error
✅ Strings are immutable in Python, so fruit[0] = 'b' causes an error.

print(len(data))
✅ len() returns the number of elements in a list.

A list of integers
✅ list(range(5)) creates [0, 1, 2, 3, 4].

6
✅ c = a + b results in [1, 2, 3, 4, 5, 6], and len(c) is 6.

t[2:4]
✅ t[2:4] selects [12, 3] (index 2 to 3 inclusive, but excludes 4).

append()
✅ append() adds an element to the end of a list.

Glenn
✅ friends.sort() sorts alphabetically, so the first item (friends[0]) becomes 'Glenn'.
